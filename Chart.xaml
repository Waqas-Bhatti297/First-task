<Activity mc:Ignorable="sap sap2010" x:Class="Chart" VisualBasic.Settings="{x:Null}" sap2010:WorkflowViewState.IdRef="Chart_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:ue="clr-namespace:UiPath.Excel;assembly=UiPath.Excel.Activities" xmlns:ueab="clr-namespace:UiPath.Excel.Activities.Business;assembly=UiPath.Excel.Activities" xmlns:ueabc="clr-namespace:UiPath.Excel.Activities.Business.ChartModifications;assembly=UiPath.Excel.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Excel.Activities.Business</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>UiPath.Excel.Model</x:String>
      <x:String>UiPath.Excel.Activities.Business.ChartModifications</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Chart" sap:VirtualizedContainerService.HintSize="1282,2403" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="sd:DataTable" Name="dt_filtered" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt_input" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:ExcelApplicationScope Password="{x:Null}" SensitivityLabel="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="575,2380" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_2" InstanceCachePeriod="3000" SensitivityOperation="None" WorkbookPath="Data\Input\Updated_EmployeeData.xlsx">
      <ui:ExcelApplicationScope.Body>
        <ActivityAction x:TypeArguments="ui:WorkbookApplication">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="541,2247" sap2010:WorkflowViewState.IdRef="Sequence_4">
            <Sequence.Variables>
              <Variable x:TypeArguments="sd:DataTable" Name="dt_filter_attendane" />
              <Variable x:TypeArguments="sd:DataTable" Name="dt_filter_tax" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:ExcelReadRange AddHeaders="True" DataTable="[dt_input]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="507,92" sap2010:WorkflowViewState.IdRef="ExcelReadRange_1" SheetName="Sheet1">
              <ui:ExcelReadRange.Range>
                <InArgument x:TypeArguments="x:String">
                  <Literal x:TypeArguments="x:String" Value="" />
                </InArgument>
              </ui:ExcelReadRange.Range>
            </ui:ExcelReadRange>
            <ui:FilterDataTable DataTable="[dt_input]" DisplayName="Filter Data Table" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="507,193" sap2010:WorkflowViewState.IdRef="FilterDataTable_1" OutputDataTable="[dt_filtered]" SelectColumnsMode="Keep">
              <ui:FilterDataTable.Filters>
                <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                  <ui:FilterOperationArgument Column="{x:Null}" Operand="{x:Null}" BooleanOperator="And" Operator="LT" />
                </scg:List>
              </ui:FilterDataTable.Filters>
              <ui:FilterDataTable.SelectColumns>
                <scg:List x:TypeArguments="InArgument" Capacity="4">
                  <InArgument x:TypeArguments="x:String">["Employee ID"]</InArgument>
                  <InArgument x:TypeArguments="x:String">["Department"]</InArgument>
                  <InArgument x:TypeArguments="x:String">["Performance"]</InArgument>
                </scg:List>
              </ui:FilterDataTable.SelectColumns>
            </ui:FilterDataTable>
            <ui:FilterDataTable DataTable="[dt_input]" DisplayName="Filter Data Table" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="507,193" sap2010:WorkflowViewState.IdRef="FilterDataTable_2" OutputDataTable="[dt_filter_attendane]" SelectColumnsMode="Keep">
              <ui:FilterDataTable.Filters>
                <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                  <ui:FilterOperationArgument Column="{x:Null}" Operand="{x:Null}" BooleanOperator="And" Operator="LT" />
                </scg:List>
              </ui:FilterDataTable.Filters>
              <ui:FilterDataTable.SelectColumns>
                <scg:List x:TypeArguments="InArgument" Capacity="4">
                  <InArgument x:TypeArguments="x:String">["Employee ID"]</InArgument>
                  <InArgument x:TypeArguments="x:String">["Department"]</InArgument>
                  <InArgument x:TypeArguments="x:String">["Presenet Percentage"]</InArgument>
                </scg:List>
              </ui:FilterDataTable.SelectColumns>
            </ui:FilterDataTable>
            <ui:FilterDataTable DataTable="[dt_input]" DisplayName="Filter Data Table" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="507,193" sap2010:WorkflowViewState.IdRef="FilterDataTable_3" OutputDataTable="[dt_filter_tax]" SelectColumnsMode="Keep">
              <ui:FilterDataTable.Filters>
                <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                  <ui:FilterOperationArgument Column="{x:Null}" Operand="{x:Null}" BooleanOperator="And" Operator="LT" />
                </scg:List>
              </ui:FilterDataTable.Filters>
              <ui:FilterDataTable.SelectColumns>
                <scg:List x:TypeArguments="InArgument" Capacity="4">
                  <InArgument x:TypeArguments="x:String">["Employee ID"]</InArgument>
                  <InArgument x:TypeArguments="x:String">["Department"]</InArgument>
                  <InArgument x:TypeArguments="x:String">["Tax Amount"]</InArgument>
                </scg:List>
              </ui:FilterDataTable.SelectColumns>
            </ui:FilterDataTable>
            <ueab:ExcelApplicationCard Password="{x:Null}" ReadFormatting="{x:Null}" SensitivityLabel="{x:Null}" DisplayName="Use Excel File" sap:VirtualizedContainerService.HintSize="507,1516" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_1" ResizeWindow="None" SensitivityOperation="None" WorkbookPath="Charts">
              <ueab:ExcelApplicationCard.Body>
                <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="chart" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="473,1224" sap2010:WorkflowViewState.IdRef="Sequence_5">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="ue:IChartRef" Name="performenceChart" />
                      <Variable x:TypeArguments="ue:IChartRef" Name="attendenceChart" />
                      <Variable x:TypeArguments="ue:IChartRef" Name="taxChart" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ueab:InsertSheetX DisplayName="Insert Sheet" sap:VirtualizedContainerService.HintSize="439,57" sap2010:WorkflowViewState.IdRef="InsertSheetX_1" Name="Sheet2" Workbook="[chart]">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ueab:InsertSheetX>
                    <ueab:InsertSheetX DisplayName="Insert Sheet" sap:VirtualizedContainerService.HintSize="439,57" sap2010:WorkflowViewState.IdRef="InsertSheetX_2" Name="Sheet3" Workbook="[chart]">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ueab:InsertSheetX>
                    <ui:ExcelWriteRange AddHeaders="False" DataTable="[dt_filtered]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="439,120" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_2" SheetName="Sheet1" StartingCell="A1" />
                    <ueab:InsertExcelChartX ChartCategory="Line" ChartHeight="211" ChartType="xlLineMarkersStacked" ChartWidth="355" DisplayName="Insert Chart" sap:VirtualizedContainerService.HintSize="439,57" sap2010:WorkflowViewState.IdRef="InsertExcelChartX_2" InsertIntoSheet="[chart.Sheet(&quot;Sheet1&quot;)]" InsertedChart="[performenceChart]" Left="60" Range="[chart.Sheet(&quot;Sheet1&quot;).Range(&quot;A1:C10&quot;)]" Top="20">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ueab:InsertExcelChartX>
                    <ueab:UpdateChartX Chart="[performenceChart]" DisplayName="Update Chart" sap:VirtualizedContainerService.HintSize="439,57" sap2010:WorkflowViewState.IdRef="UpdateChartX_1">
                      <ueab:UpdateChartX.Body>
                        <ActivityAction>
                          <Sequence DisplayName="Do" sap2010:WorkflowViewState.IdRef="Sequence_6">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ueabc:ModifyChartTitleModification DisplayName="Modify Chart Title" sap:VirtualizedContainerService.HintSize="387,90" sap2010:WorkflowViewState.IdRef="ModifyChartTitleModification_1" Title="Department Performence" />
                          </Sequence>
                        </ActivityAction>
                      </ueab:UpdateChartX.Body>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ueab:UpdateChartX>
                    <ui:ExcelWriteRange AddHeaders="False" DataTable="[dt_filter_attendane]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="439,57" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_3" SheetName="Sheet2" StartingCell="A1">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:ExcelWriteRange>
                    <ueab:InsertExcelChartX ChartCategory="Column" ChartHeight="211" ChartType="xlColumnStacked" ChartWidth="355" DisplayName="Insert Chart" sap:VirtualizedContainerService.HintSize="439,57" sap2010:WorkflowViewState.IdRef="InsertExcelChartX_4" InsertIntoSheet="[chart.Sheet(&quot;Sheet2&quot;)]" InsertedChart="[attendenceChart]" Left="60" Range="[chart.Sheet(&quot;Sheet2&quot;).Range(&quot;A1:C10&quot;)]" Top="20">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ueab:InsertExcelChartX>
                    <ueab:UpdateChartX Chart="[attendenceChart]" DisplayName="Update Chart" sap:VirtualizedContainerService.HintSize="439,57" sap2010:WorkflowViewState.IdRef="UpdateChartX_3">
                      <ueab:UpdateChartX.Body>
                        <ActivityAction>
                          <Sequence DisplayName="Do" sap2010:WorkflowViewState.IdRef="Sequence_7">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ueabc:ModifyChartTitleModification DisplayName="Modify Chart Title" sap:VirtualizedContainerService.HintSize="387,90" sap2010:WorkflowViewState.IdRef="ModifyChartTitleModification_2" Title="Department Attendence" />
                          </Sequence>
                        </ActivityAction>
                      </ueab:UpdateChartX.Body>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ueab:UpdateChartX>
                    <ui:ExcelWriteRange AddHeaders="False" DataTable="[dt_filter_tax]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="439,120" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_4" SheetName="Sheet3" StartingCell="A1">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:ExcelWriteRange>
                    <ueab:InsertExcelChartX ChartCategory="Column" ChartHeight="211" ChartType="xlColumnStacked" ChartWidth="355" DisplayName="Insert Chart" sap:VirtualizedContainerService.HintSize="439,266" sap2010:WorkflowViewState.IdRef="InsertExcelChartX_5" InsertIntoSheet="[chart.Sheet(&quot;Sheet3&quot;)]" InsertedChart="[taxChart]" Left="60" Range="[chart.Sheet(&quot;Sheet3&quot;).Range(&quot;A1:C10&quot;)]" Top="20">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ueab:InsertExcelChartX>
                    <ueab:UpdateChartX Chart="[taxChart]" DisplayName="Update Chart" sap:VirtualizedContainerService.HintSize="439,259" sap2010:WorkflowViewState.IdRef="UpdateChartX_4">
                      <ueab:UpdateChartX.Body>
                        <ActivityAction>
                          <Sequence DisplayName="Do" sap2010:WorkflowViewState.IdRef="Sequence_10">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ueabc:ModifyChartTitleModification DisplayName="Modify Chart Title" sap:VirtualizedContainerService.HintSize="387,90" sap2010:WorkflowViewState.IdRef="ModifyChartTitleModification_3" Title="Department Tax" />
                          </Sequence>
                        </ActivityAction>
                      </ueab:UpdateChartX.Body>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ueab:UpdateChartX>
                  </Sequence>
                </ActivityAction>
              </ueab:ExcelApplicationCard.Body>
            </ueab:ExcelApplicationCard>
          </Sequence>
        </ActivityAction>
      </ui:ExcelApplicationScope.Body>
    </ui:ExcelApplicationScope>
  </Sequence>
</Activity>